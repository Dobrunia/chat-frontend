import {
  saveNewUsername,
  findUserById,
  getFriendStatusInfo,
  removeFriend,
  saveChangedUserInfo,
  saveColorsToDb,
  savePost,
  getUserPosts,
  removePost,
  savePhoto,
  saveFriendRequest,
} from './profile_request.js';
import { getAllFriendsInfo } from '../general_request.js';
import {
  announcementMessage,
  getAndRenderMyInfo,
  renderNotifications,
  makeItRain,
  escapeHtml,
  escapeSql,
  getCurrentDate,
  askConfirmationFromUser,
  unescapeSql,
} from '../general.js';

const $ = (element) => document.querySelector(element);
let queryString = window.location.search;
let urlParams = new URLSearchParams(queryString);
async function start() {
  $('#spinner_wrapper').classList.remove('none');
  await renderUserProfilePage();
  $('#spinner_wrapper').classList.add('none');
}
start();
/**
 * открыть окно UserInfoEditWindow
 */
function showUserInfoEditWindow() {
  $('#nav_user_info_edit_window').classList.remove('none');
  //$('#nav_elements').classList.add('blur');
}

/**
 * смена имени пользователя
 */
export async function changeUsername() {
  const username = escapeSql(
    escapeHtml($('#changeName_input').value.toString().trim()),
  );
  if (!username) {
    announcementMessage('Некорректное имя пользователя');
    return 'Некорректное имя пользователя';
  }
  const data = await saveNewUsername(username);
  if (data) {
    $('#changeName_input').value = '';
    localStorage.setItem('username', username);
    await renderUserProfilePage();
  }
}

async function addFriend(event) {
  let targetElement = event.target;
  let currentElement = targetElement.closest('.nav_user_add_friend');
  let friendId = currentElement?.getAttribute('data-id');
  const data = await saveFriendRequest(friendId);
  if (data) {
    announcementMessage('Запрос на добавления в друзья отправлен');
    renderUserProfilePage();
  }
}

/**
 * закрыть окно UserInfoEditWindow
 */
export function hideUserInfoEditWindow() {
  $('#nav_user_info_edit_window').classList.add('none');
}

/**
 * рендер верстки страницы пользователя
 */
async function renderProfilePage(userId) {
  console.log('renderProfilePage');
  const userDATA = await findUserById(userId);
  let friendBtn = `<a href="${
    import.meta.env.VITE_SRC
  }pages/messenger_page/messenger.html?id=${userDATA.id}&chatId=${
    userDATA.chatId
  }" class="nav_user_writeTo"><div class="btn btn-outline-light me-2 openDialog" data-id="${
    userDATA.id
  }" data-username="${userDATA.username}" data-email="${
    userDATA.email
  }" data-avatar="${unescapeSql(userDATA.avatar)}" data-chatid="${
    userDATA.chatId
  }" title="Открыть переписку с ${userDATA.username}">Написать</div></a>`;
  if (userDATA.id.toString() === localStorage.getItem('id')) {
    friendBtn = '';
  } else {
    const isFriend = await getFriendStatusInfo(userDATA.id.toString());
    if (!isFriend[0]) {
      friendBtn += `<div class="btn btn-outline-light me-2 nav_user_add_friend" id="nav_user_add_friend" data-id="${userDATA.id}" title="Добавить ${userDATA.username} в друзья"><svg fill="#ffc107" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
        width="20px" height="20px" viewBox="0 0 45.902 45.902"
        xml:space="preserve">
     <g>
       <g>
         <path d="M43.162,26.681c-1.564-1.578-3.631-2.539-5.825-2.742c1.894-1.704,3.089-4.164,3.089-6.912
           c0-5.141-4.166-9.307-9.308-9.307c-4.911,0-8.932,3.804-9.281,8.625c4.369,1.89,7.435,6.244,7.435,11.299
           c0,1.846-0.42,3.65-1.201,5.287c1.125,0.588,2.162,1.348,3.066,2.26c2.318,2.334,3.635,5.561,3.61,8.851l-0.002,0.067
           l-0.002,0.057l-0.082,1.557h11.149l0.092-12.33C45.921,30.878,44.936,28.466,43.162,26.681z"/>
         <path d="M23.184,34.558c1.893-1.703,3.092-4.164,3.092-6.912c0-5.142-4.168-9.309-9.309-9.309c-5.142,0-9.309,4.167-9.309,9.309
           c0,2.743,1.194,5.202,3.084,6.906c-4.84,0.375-8.663,4.383-8.698,9.318l-0.092,1.853h14.153h15.553l0.092-1.714
           c0.018-2.514-0.968-4.926-2.741-6.711C27.443,35.719,25.377,34.761,23.184,34.558z"/>
         <path d="M6.004,11.374v3.458c0,1.432,1.164,2.595,2.597,2.595c1.435,0,2.597-1.163,2.597-2.595v-3.458h3.454
           c1.433,0,2.596-1.164,2.596-2.597c0-1.432-1.163-2.596-2.596-2.596h-3.454V2.774c0-1.433-1.162-2.595-2.597-2.595
           c-1.433,0-2.597,1.162-2.597,2.595V6.18H2.596C1.161,6.18,0,7.344,0,8.776c0,1.433,1.161,2.597,2.596,2.597H6.004z"/>
       </g>
     </g>
     </svg></div>`;
    } else {
      if (isFriend[0].status === 'accepted') {
        //TODO:: проверка есть ли в друзьях
        friendBtn += `<div class="btn btn-outline-light me-2 nav_user_add_friend nav_user_remove_friend" id="nav_user_remove_friend" data-id="${userDATA.id}" title="Удалить из друзей ${userDATA.username}"><svg fill="#ffc107" version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
          viewBox="0 0 512 512" xml:space="preserve">
       <g>
         <g>
           <rect y="100.174" width="33.391" height="144.696"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="311.652" y="100.174" width="33.391" height="144.696"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="100.174" width="144.696" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="33.391" y="66.783" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="66.783" y="33.391" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="244.87" y="33.391" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="278.261" y="66.783" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="33.391" y="244.87" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="278.261" y="244.87" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <polygon points="244.87,278.261 244.87,311.652 211.478,311.652 211.478,345.043 278.261,345.043 278.261,278.261 		"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="33.391" y="345.043" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <polygon points="100.174,311.652 100.174,278.261 66.783,278.261 66.783,345.043 133.565,345.043 133.565,311.652 		"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="345.043" y="378.435" width="100.174" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="478.609" y="345.043" width="33.391" height="100.174"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="345.043" y="478.609" width="100.174" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="345.043" y="278.261" width="100.174" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <polygon points="278.261,345.043 278.261,411.826 33.391,411.826 33.391,378.435 0,378.435 0,445.217 311.652,445.217 
             311.652,345.043 		"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="311.652" y="311.652" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="445.217" y="311.652" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="445.217" y="445.217" width="33.391" height="33.391"/>
         </g>
       </g>
       <g>
         <g>
           <rect x="311.652" y="445.217" width="33.391" height="33.391"/>
         </g>
       </g>
       </svg></div>`;
      } else if (isFriend[0].status === 'rejected') {
        friendBtn += `<div class="btn btn-outline-light me-2 nav_user_add_friend" id="nav_user_add_friend" data-id="${userDATA.id}" title="Добавить ${userDATA.username} в друзья"><svg fill="#ffc107" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" 
          width="20px" height="20px" viewBox="0 0 45.902 45.902"
          xml:space="preserve">
       <g>
         <g>
           <path d="M43.162,26.681c-1.564-1.578-3.631-2.539-5.825-2.742c1.894-1.704,3.089-4.164,3.089-6.912
             c0-5.141-4.166-9.307-9.308-9.307c-4.911,0-8.932,3.804-9.281,8.625c4.369,1.89,7.435,6.244,7.435,11.299
             c0,1.846-0.42,3.65-1.201,5.287c1.125,0.588,2.162,1.348,3.066,2.26c2.318,2.334,3.635,5.561,3.61,8.851l-0.002,0.067
             l-0.002,0.057l-0.082,1.557h11.149l0.092-12.33C45.921,30.878,44.936,28.466,43.162,26.681z"/>
           <path d="M23.184,34.558c1.893-1.703,3.092-4.164,3.092-6.912c0-5.142-4.168-9.309-9.309-9.309c-5.142,0-9.309,4.167-9.309,9.309
             c0,2.743,1.194,5.202,3.084,6.906c-4.84,0.375-8.663,4.383-8.698,9.318l-0.092,1.853h14.153h15.553l0.092-1.714
             c0.018-2.514-0.968-4.926-2.741-6.711C27.443,35.719,25.377,34.761,23.184,34.558z"/>
           <path d="M6.004,11.374v3.458c0,1.432,1.164,2.595,2.597,2.595c1.435,0,2.597-1.163,2.597-2.595v-3.458h3.454
             c1.433,0,2.596-1.164,2.596-2.597c0-1.432-1.163-2.596-2.596-2.596h-3.454V2.774c0-1.433-1.162-2.595-2.597-2.595
             c-1.433,0-2.597,1.162-2.597,2.595V6.18H2.596C1.161,6.18,0,7.344,0,8.776c0,1.433,1.161,2.597,2.596,2.597H6.004z"/>
         </g>
       </g>
       </svg></div>`;
      } else if (isFriend[0].status === 'pending') {
        friendBtn += ``;
      }
    }
  }
  let save = `<input
    id="file"
    type="file"
    name="file"
    multiple
    style="display: none"
  />
  <label
    for="file"
    class="file-icon picker"
    title="Загрузить файл"
  >
    <img src="./src/img/File.svg" alt="" />
  </label>`;
  $('#profile_page').innerHTML = '';
  let canEditInfo = '';
  let scrollingText = '';
  let telegramLink = '';
  let steamLink = '';
  let shikimoriLink = '';
  if (localStorage.getItem('id') === userDATA.id.toString()) {
    canEditInfo = `<div class="nav_user_info_edit" id="nav_user_info_edit">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 32 32"
        width="25px"
        height="25px"
      >
        <path
          d="M 23.90625 3.96875 C 22.859375 3.96875 21.8125 4.375 21 5.1875 L 5.1875 21 L 5.125 21.3125 L 4.03125 26.8125 L 3.71875 28.28125 L 5.1875 27.96875 L 10.6875 26.875 L 11 26.8125 L 26.8125 11 C 28.4375 9.375 28.4375 6.8125 26.8125 5.1875 C 26 4.375 24.953125 3.96875 23.90625 3.96875 Z M 23.90625 5.875 C 24.410156 5.875 24.917969 6.105469 25.40625 6.59375 C 26.378906 7.566406 26.378906 8.621094 25.40625 9.59375 L 24.6875 10.28125 L 21.71875 7.3125 L 22.40625 6.59375 C 22.894531 6.105469 23.402344 5.875 23.90625 5.875 Z M 20.3125 8.71875 L 23.28125 11.6875 L 11.1875 23.78125 C 10.53125 22.5 9.5 21.46875 8.21875 20.8125 Z M 6.9375 22.4375 C 8.136719 22.921875 9.078125 23.863281 9.5625 25.0625 L 6.28125 25.71875 Z"
          fill="var(--attention)"
        />
      </svg>
    </div>`;
  }
  if (userDATA.scrollingText) {
    scrollingText = `<div class="nav_user_marquee fade_in_out"><span>${userDATA.scrollingText}</span></div>`;
    $('#scrollingText_input').value = userDATA.scrollingText;
  } else {
    $('#scrollingText_input').value = '';
  }
  if (userDATA.telegramLink) {
    telegramLink = `<a
      href="https://t.me/${userDATA.telegramLink}"
      target="_blank"
      title="Ссылка на телеграм ${userDATA.username}"
      ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="50px" height="50px">
      <path fill="var(--navDarkBg)" d="M24 4A20 20 0 1 0 24 44A20 20 0 1 0 24 4Z" />
      <path fill="var(--attention)" d="M33.95,15l-3.746,19.126c0,0-0.161,0.874-1.245,0.874c-0.576,0-0.873-0.274-0.873-0.274l-8.114-6.733 l-3.97-2.001l-5.095-1.355c0,0-0.907-0.262-0.907-1.012c0-0.625,0.933-0.923,0.933-0.923l21.316-8.468 c-0.001-0.001,0.651-0.235,1.126-0.234C33.667,14,34,14.125,34,14.5C34,14.75,33.95,15,33.95,15z" />
      <path fill="var(--attention)" d="M23,30.505l-3.426,3.374c0,0-0.149,0.115-0.348,0.12c-0.069,0.002-0.143-0.009-0.219-0.043 l0.964-5.965L23,30.505z" />
      <path fill="var(--navDarkBg)" d="M29.897,18.196c-0.169-0.22-0.481-0.26-0.701-0.093L16,26c0,0,2.106,5.892,2.427,6.912 c0.322,1.021,0.58,1.045,0.58,1.045l0.964-5.965l9.832-9.096C30.023,18.729,30.064,18.416,29.897,18.196z" />
    </svg>
    </a>`;
    $('#telegramLink_input').value = userDATA.telegramLink;
  } else {
    $('#telegramLink_input').value = '';
  }
  if (userDATA.steamLink) {
    steamLink = `<a
      href="https://steamcommunity.com/id/${userDATA.steamLink}"
      target="_blank"
      title="Ссылка на steam ${userDATA.username}"
      ><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="50px" height="50px">
      <linearGradient id="wI0QYw54EXg5_LlgK1HXYa" x1="24" x2="24" y1="44" y2="4" gradientUnits="userSpaceOnUse">
        <stop offset="0" stop-color="var(--navDarkBg)" />
        <stop offset="1" stop-color="var(--navDarkBg)" />
      </linearGradient>
      <path fill="url(#wI0QYw54EXg5_LlgK1HXYa)" d="M44,24c0,11.04-8.96,20-20,20c-8.39,0-15.57-5.16-18.53-12.48c-0.09-0.2-0.16-0.4-0.24-0.6 c-0.07-0.19-0.14-0.39-0.2-0.59C4.36,28.34,4,26.21,4,24c0-0.17,0-0.35,0.02-0.52c-0.01-0.17,0-0.35,0.01-0.52 C4.57,12.4,13.3,4,24,4C35.04,4,44,12.95,44,24z" />
      <circle cx="28.5" cy="18.5" r="3.5" fill="var(--attention)" />
      <path d="M28.5,14.5c-2.21,0-4,1.79-4,4c0,2.21,1.79,4,4,4s4-1.79,4-4C32.5,16.29,30.71,14.5,28.5,14.5z M28.5,22c-1.93,0-3.5-1.57-3.5-3.5s1.57-3.5,3.5-3.5s3.5,1.57,3.5,3.5S30.43,22,28.5,22z" opacity=".07" />
      <path fill="var(--attention)" d="M28.5,10c-4.69,0-8.5,3.81-8.5,8.5c0,0.18,0.02,0.35,0.03,0.52L17,24c-2.07,0-3.92,0.9-5.2,2.32 L4,24c0,2.21,0.36,4.34,1.03,6.33l5.04,1.61C10.53,35.36,13.45,38,17,38c3.87,0,7-3.13,7-7c0-0.37-0.04-0.73-0.09-1.08l5.06-2.94 C33.44,26.73,37,23.03,37,18.5C37,13.81,33.19,10,28.5,10z M17,36c-2.18,0-4.02-1.41-4.7-3.35l3.75,1.19l0.01-0.01 c0,0.01,0.01,0.01,0.02,0.01c0.14,0.04,0.27,0.08,0.41,0.11C16.66,33.98,16.83,34,17,34c1.66,0,3-1.34,3-3 c0-1.3-0.85-2.41-2.02-2.82c-0.01-0.01-0.03-0.03-0.03-0.03l-3.91-1.16C14.87,26.38,15.89,26,17,26c2.76,0,5,2.24,5,5 S19.76,36,17,36z M28.5,24c-3.04,0-5.5-2.46-5.5-5.5c0-3.04,2.46-5.5,5.5-5.5s5.5,2.46,5.5,5.5C34,21.54,31.54,24,28.5,24z" />
      <path d="M33.4,17.49c-0.07-0.32-0.17-0.63-0.29-0.93c-0.06-0.15-0.14-0.3-0.21-0.44 c-0.47-0.85-1.17-1.55-2.02-2.02c-0.14-0.07-0.29-0.15-0.44-0.21c-0.3-0.12-0.61-0.22-0.93-0.29c-0.33-0.06-0.67-0.1-1.01-0.1 s-0.68,0.04-1.01,0.1c-0.32,0.07-0.63,0.17-0.93,0.29c-0.15,0.06-0.3,0.14-0.44,0.21c-0.85,0.47-1.55,1.17-2.02,2.02 c-0.07,0.14-0.15,0.29-0.21,0.44c-0.12,0.3-0.22,0.61-0.29,0.93c-0.06,0.33-0.1,0.67-0.1,1.01c0,0.34,0.04,0.68,0.1,1.01 c0.07,0.32,0.17,0.63,0.29,0.93c0.06,0.15,0.14,0.3,0.21,0.44c0.47,0.85,1.17,1.55,2.02,2.02c0.14,0.07,0.29,0.15,0.44,0.21 c0.3,0.12,0.61,0.22,0.93,0.29c0.33,0.06,0.67,0.1,1.01,0.1s0.68-0.04,1.01-0.1c0.32-0.07,0.63-0.17,0.93-0.29 c0.15-0.06,0.3-0.14,0.44-0.21c0.85-0.47,1.55-1.17,2.02-2.02c0.07-0.14,0.15-0.29,0.21-0.44c0.12-0.3,0.22-0.61,0.29-0.93 c0.06-0.33,0.1-0.67,0.1-1.01C33.5,18.16,33.46,17.82,33.4,17.49z M28.5,22.5c-2.21,0-4-1.79-4-4c0-2.21,1.79-4,4-4s4,1.79,4,4 C32.5,20.71,30.71,22.5,28.5,22.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34l2.79,0.83l0.12,0.06l0.01,0.01 c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5c-0.19,0-0.39-0.02-0.59-0.06h-0.03l-0.01,0.03l-0.47-0.15l-2.63-0.84 c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5C21.5,28.52,19.48,26.5,17,26.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34 l2.79,0.83l0.12,0.06l0.01,0.01c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5c-0.19,0-0.39-0.02-0.59-0.06h-0.03 l-0.01,0.03l-0.47-0.15l-2.63-0.84c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5C21.5,28.52,19.48,26.5,17,26.5z M28.5,9 c-5.24,0-9.5,4.26-9.5,9.5c0,0.09,0,0.18,0.01,0.27l-2.58,4.25c-1.84,0.13-3.58,0.9-4.92,2.17l-7.22-2.15l-0.26-0.08 c-0.01,0.17-0.02,0.35-0.01,0.52l0.12,0.04l7.51,2.24c1.34-1.37,3.16-2.18,5.07-2.25l2.8-4.61c-0.01-0.13-0.02-0.27-0.02-0.4 c0-4.96,4.04-9,9-9s9,4.04,9,9c0,4.73-3.67,8.64-8.38,8.97l-4.67,2.72c0.03,0.28,0.05,0.55,0.05,0.81c0,4.14-3.36,7.5-7.5,7.5 c-3.63,0-6.75-2.64-7.38-6.18l-4.39-1.4c0.08,0.2,0.15,0.4,0.24,0.6l3.72,1.19C9.98,36.34,13.23,39,17,39c4.41,0,8-3.59,8-8 c0-0.18-0.01-0.36-0.02-0.54l4.29-2.5c4.92-0.4,8.73-4.51,8.73-9.46C38,13.26,33.74,9,28.5,9z M17,34.5 c-0.19,0-0.39-0.02-0.59-0.06h-0.03l-0.01,0.03l-0.47-0.15l-2.63-0.84c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5 c0-2.48-2.02-4.5-4.5-4.5c-0.59,0-1.16,0.12-1.7,0.34l2.79,0.83l0.12,0.06l0.01,0.01c1.37,0.51,2.28,1.81,2.28,3.26 C20.5,32.93,18.93,34.5,17,34.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34l2.79,0.83l0.12,0.06l0.01,0.01 c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5c-0.19,0-0.39-0.02-0.59-0.06h-0.03l-0.01,0.03l-0.47-0.15l-2.63-0.84 c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5C21.5,28.52,19.48,26.5,17,26.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34 l2.79,0.83l0.12,0.06l0.01,0.01c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5c-0.19,0-0.39-0.02-0.59-0.06h-0.03 l-0.01,0.03l-0.47-0.15l-2.63-0.84c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5C21.5,28.52,19.48,26.5,17,26.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34l2.79,0.83l0.12,0.06l0.01,0.01c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5 c-0.19,0-0.39-0.02-0.59-0.06h-0.03l-0.01,0.03l-0.47-0.15l-2.63-0.84c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5 C21.5,28.52,19.48,26.5,17,26.5z M17,26.5c-0.59,0-1.16,0.12-1.7,0.34l2.79,0.83l0.12,0.06l0.01,0.01 c1.37,0.51,2.28,1.81,2.28,3.26c0,1.93-1.57,3.5-3.5,3.5c-0.19,0-0.39-0.02-0.59-0.06h-0.03l-0.01,0.03l-0.47-0.15l-2.63-0.84 c0.82,1.24,2.21,2.02,3.73,2.02c2.48,0,4.5-2.02,4.5-4.5C21.5,28.52,19.48,26.5,17,26.5z" opacity=".05" />
      <path d="M28.5,9.5c-4.96,0-9,4.04-9,9c0,0.13,0.01,0.27,0.02,0.4l-2.8,4.61c-1.91,0.07-3.73,0.88-5.07,2.25 l-7.51-2.24l-0.12-0.04C4,23.65,4,23.83,4,24l7.8,2.32C13.08,24.9,14.93,24,17,24l3.03-4.98C20.02,18.85,20,18.68,20,18.5 c0-4.69,3.81-8.5,8.5-8.5s8.5,3.81,8.5,8.5c0,4.53-3.56,8.23-8.03,8.48l-5.06,2.94C23.96,30.27,24,30.63,24,31c0,3.87-3.13,7-7,7 c-3.55,0-6.47-2.64-6.93-6.06l-5.04-1.61c0.06,0.2,0.13,0.4,0.2,0.59l4.39,1.4c0.63,3.54,3.75,6.18,7.38,6.18 c4.14,0,7.5-3.36,7.5-7.5c0-0.26-0.02-0.53-0.05-0.81l4.67-2.72c4.71-0.33,8.38-4.24,8.38-8.97C37.5,13.54,33.46,9.5,28.5,9.5z M28.5,24c3.04,0,5.5-2.46,5.5-5.5c0-3.04-2.46-5.5-5.5-5.5S23,15.46,23,18.5C23,21.54,25.46,24,28.5,24z M23.89,20.44 c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93 c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29 c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21 c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01 c0,0.34-0.04,0.68-0.1,1.01c-0.07,0.32-0.16,0.63-0.29,0.93c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02 c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1 c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21c-0.85-0.47-1.55-1.17-2.02-2.02 C24.03,20.74,23.95,20.59,23.89,20.44z M17,34c-0.17,0-0.34-0.02-0.51-0.05c-0.14-0.03-0.27-0.07-0.41-0.11 c-0.01,0-0.02,0-0.02-0.01l-0.01,0.01l-3.75-1.19C12.98,34.59,14.82,36,17,36c2.76,0,5-2.24,5-5s-2.24-5-5-5 c-1.11,0-2.13,0.38-2.96,0.99l3.91,1.16c0,0,0.02,0.02,0.03,0.03C19.15,28.59,20,29.7,20,31C20,32.66,18.66,34,17,34z M20.5,31 c0-1.45-0.91-2.75-2.28-3.26l-0.01-0.01l-0.12-0.06l-2.79-0.83c0.54-0.22,1.11-0.34,1.7-0.34c2.48,0,4.5,2.02,4.5,4.5 c0,2.48-2.02,4.5-4.5,4.5c-1.52,0-2.91-0.78-3.73-2.02l2.63,0.84l0.47,0.15l0.01-0.03h0.03c0.2,0.04,0.4,0.06,0.59,0.06 C18.93,34.5,20.5,32.93,20.5,31z M17,26c-1.11,0-2.13,0.38-2.96,0.99l3.91,1.16c0,0,0.02,0.02,0.03,0.03C19.15,28.59,20,29.7,20,31 c0,1.66-1.34,3-3,3c-0.17,0-0.34-0.02-0.51-0.05c-0.14-0.03-0.27-0.07-0.41-0.11c-0.01,0-0.02,0-0.02-0.01l-0.01,0.01l-3.75-1.19 C12.98,34.59,14.82,36,17,36c2.76,0,5-2.24,5-5S19.76,26,17,26z M17,35.5c-1.52,0-2.91-0.78-3.73-2.02l2.63,0.84l0.47,0.15 l0.01-0.03h0.03c0.2,0.04,0.4,0.06,0.59,0.06c1.93,0,3.5-1.57,3.5-3.5c0-1.45-0.91-2.75-2.28-3.26l-0.01-0.01l-0.12-0.06 l-2.79-0.83c0.54-0.22,1.11-0.34,1.7-0.34c2.48,0,4.5,2.02,4.5,4.5C21.5,33.48,19.48,35.5,17,35.5z M28.5,13 c-3.04,0-5.5,2.46-5.5,5.5c0,3.04,2.46,5.5,5.5,5.5s5.5-2.46,5.5-5.5C34,15.46,31.54,13,28.5,13z M33.11,20.44 c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29 c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21 c-0.85-0.47-1.55-1.17-2.02-2.02c-0.07-0.14-0.15-0.29-0.21-0.44c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01 c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02 c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1 c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44 c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01c0,0.34-0.04,0.68-0.1,1.01C33.33,19.83,33.24,20.14,33.11,20.44z M28.5,13c-3.04,0-5.5,2.46-5.5,5.5c0,3.04,2.46,5.5,5.5,5.5s5.5-2.46,5.5-5.5C34,15.46,31.54,13,28.5,13z M33.11,20.44 c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29 c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21 c-0.85-0.47-1.55-1.17-2.02-2.02c-0.07-0.14-0.15-0.29-0.21-0.44c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01 c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02 c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1 c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44 c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01c0,0.34-0.04,0.68-0.1,1.01C33.33,19.83,33.24,20.14,33.11,20.44z M17,26c-1.11,0-2.13,0.38-2.96,0.99l3.91,1.16c0,0,0.02,0.02,0.03,0.03C19.15,28.59,20,29.7,20,31c0,1.66-1.34,3-3,3 c-0.17,0-0.34-0.02-0.51-0.05c-0.14-0.03-0.27-0.07-0.41-0.11c-0.01,0-0.02,0-0.02-0.01l-0.01,0.01l-3.75-1.19 C12.98,34.59,14.82,36,17,36c2.76,0,5-2.24,5-5S19.76,26,17,26z M17,35.5c-1.52,0-2.91-0.78-3.73-2.02l2.63,0.84l0.47,0.15 l0.01-0.03h0.03c0.2,0.04,0.4,0.06,0.59,0.06c1.93,0,3.5-1.57,3.5-3.5c0-1.45-0.91-2.75-2.28-3.26l-0.01-0.01l-0.12-0.06 l-2.79-0.83c0.54-0.22,1.11-0.34,1.7-0.34c2.48,0,4.5,2.02,4.5,4.5C21.5,33.48,19.48,35.5,17,35.5z" opacity=".07" />
      <path d="M28.5,13c-3.04,0-5.5,2.46-5.5,5.5c0,3.04,2.46,5.5,5.5,5.5s5.5-2.46,5.5-5.5 C34,15.46,31.54,13,28.5,13z M33.11,20.44c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02 c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1 c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21c-0.85-0.47-1.55-1.17-2.02-2.02c-0.07-0.14-0.15-0.29-0.21-0.44 c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93 c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29 c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21 c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01 c0,0.34-0.04,0.68-0.1,1.01C33.33,19.83,33.24,20.14,33.11,20.44z M28.5,13c-3.04,0-5.5,2.46-5.5,5.5c0,3.04,2.46,5.5,5.5,5.5 s5.5-2.46,5.5-5.5C34,15.46,31.54,13,28.5,13z M33.11,20.44c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02 c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1 c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21c-0.85-0.47-1.55-1.17-2.02-2.02c-0.07-0.14-0.15-0.29-0.21-0.44 c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93 c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29 c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21 c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01 c0,0.34-0.04,0.68-0.1,1.01C33.33,19.83,33.24,20.14,33.11,20.44z M28.5,13c-3.04,0-5.5,2.46-5.5,5.5c0,3.04,2.46,5.5,5.5,5.5 s5.5-2.46,5.5-5.5C34,15.46,31.54,13,28.5,13z M33.11,20.44c-0.06,0.15-0.14,0.3-0.21,0.44c-0.47,0.85-1.17,1.55-2.02,2.02 c-0.14,0.07-0.29,0.15-0.44,0.21c-0.3,0.13-0.61,0.22-0.93,0.29c-0.33,0.06-0.67,0.1-1.01,0.1s-0.68-0.04-1.01-0.1 c-0.32-0.07-0.63-0.16-0.93-0.29c-0.15-0.06-0.3-0.14-0.44-0.21c-0.85-0.47-1.55-1.17-2.02-2.02c-0.07-0.14-0.15-0.29-0.21-0.44 c-0.13-0.3-0.22-0.61-0.29-0.93c-0.06-0.33-0.1-0.67-0.1-1.01c0-0.34,0.04-0.68,0.1-1.01c0.07-0.32,0.16-0.63,0.29-0.93 c0.06-0.15,0.14-0.3,0.21-0.44c0.47-0.85,1.17-1.55,2.02-2.02c0.14-0.07,0.29-0.15,0.44-0.21c0.3-0.13,0.61-0.22,0.93-0.29 c0.33-0.06,0.67-0.1,1.01-0.1s0.68,0.04,1.01,0.1c0.32,0.07,0.63,0.16,0.93,0.29c0.15,0.06,0.3,0.14,0.44,0.21 c0.85,0.47,1.55,1.17,2.02,2.02c0.07,0.14,0.15,0.29,0.21,0.44c0.13,0.3,0.22,0.61,0.29,0.93c0.06,0.33,0.1,0.67,0.1,1.01 c0,0.34-0.04,0.68-0.1,1.01C33.33,19.83,33.24,20.14,33.11,20.44z" opacity=".07" />
    </svg>
    </a>`;
    $('#steamLink_input').value = userDATA.steamLink;
  } else {
    $('#steamLink_input').value = '';
  }
  if (userDATA.shikimoriLink) {
    shikimoriLink = `<a
      href="https://shikimori.one/${userDATA.shikimoriLink}"
      target="_blank"
      title="Ссылка на шикимори ${userDATA.username}"
      ><?xml version="1.0" encoding="utf-8"?>
      <svg width="41.67px" height="41.67" viewBox="0 0 104.5 104.5" preserveAspectRatio="xMidYMid meet" xmlns="http://www.w3.org/2000/svg">
        <g transform="matrix(0.012775 0 0 0.012775 -15.304452 -9.893285)">
          <path d="M1725 8911c-6-5-39-19-73-32-35-12-66-28-69-36-3-8 25-41 68-80 127-114 229-225 284-308 29-44 81-111 115-150 191-213 444-597 655-994 136-256 145-283 157-476 15-246 4-566-31-900-17-159-31-294-31-298 0-13-28-2-249 96-142 63-216 102-242 126-21 20-78 57-127 84-107 57-135 59-307 22-162-34-232-73-397-218-38-33-68-65-68-71 0-11-68-114-164-249l-48-68 17-64c14-52 17-91 13-198-4-88-2-141 6-153 6-10 9-43 7-71l-3-52 59-27c33-16 75-27 98-26 28 0 48-7 65-22 72-65 125-81 180-53 24 12 25 15 21 108-4 110-3 111 84 129 84 17 192 7 478-45 265-48 630-105 671-105 19 0 35-13 65-54 22-29 63-74 93-100l53-48 90 7c160 11 347 36 407 55 57 18 63 18 171 0 62-10 159-23 217-29 264-28 300-34 311-47 7-9 17-11 28-4 12 6 25 4 42-5 95-55 109-59 259-61 84-1 177-8 221-17 198-41 788-114 1066-133l102-7-14-28c-20-37-19-49 3-47 9 1 46 0 82 0l65-2 53-73c29-39 59-81 67-92 13-19 16-18 73 38 33 33 70 81 83 108l23 49 145-5c214-7 786-18 856-16 33 1 111 8 173 16 62 8 133 15 158 15 54 0 55 5-43-127-68-91-158-172-221-199-19-7-47-25-63-38-16-14-95-46-184-76-88-29-168-62-184-76-16-13-35-24-42-24-8 0-56-9-106-21-77-18-93-25-93-40 0-35 89-20 293 50 86 29 117 36 117 26 0-9-53-31-145-62-86-28-145-53-145-60 0-7 8-13 17-13 25 0 8-11-29-19-23-5-32-12-30-24 2-9-2-17-9-17-6 0-9-7-5-15 3-8 2-15-3-15-13 0-46 41-85 106-20 34-42 64-49 66-6 3-43 1-82-3-38-4-80-8-92-8-16-1-23-7-23-19 0-17-15-20-131-31-95-9-134-10-142-2-15 15-27 14-27-3 0-10-16-16-52-20-68-7-331-28-385-31-22-2-46-6-52-9-15-10-33 3-27 19 2 7-2 16-10 19-22 9-22 9-26-22-3-27-4-27-85-30-53-2-83 1-83 8 0 5 8 10 18 10 9 0 33 10 52 22 19 11 51 22 70 24 19 1 41 2 48 3 6 1 12 6 12 12 0 6-16 10-37 9-21-1-65-1-98 0l-60 2 40 10c23 6 49 22 63 38l22 29-57 11c-32 7-64 15-72 18-12 4-13-5-7-52l6-58-37 7c-20 4-47 15-60 25-19 14-38 17-95 15l-72-3-9-33c-13-51-21-53-51-14-15 19-34 35-42 35-11 0-13 6-9 20 4 13 2 20-7 20-7 1-165 3-351 5-186 2-362 9-390 15-29 5-65 12-82 14-16 1 0 4 37 5 36 0 73 4 82 7 44 17 1 24-148 24-166 0-198 7-161 34 15 11 9 14-45 19-35 4-84 7-109 7-38 1-43 2-27 12 11 6 41 8 72 5 54-6 70 4 37 22-10 5-67 11-128 14-109 6-223 31-247 55-6 6-37 12-68 12-30 0-71 5-90 10-19 6-89 15-155 21-79 6-134 16-160 29-37 18-60 19-335 14-286-4-401-12-485-33-22-6-83-20-135-31-151-34-422-182-531-290-103-101-116-134-165-415-23-135-25-168-21-330 5-206 18-266 91-421 151-318 375-464 610-396 103 30 215 52 260 52 72 0 216 22 226 36 21 24-22 32-205 36-201 6-248 14-351 64-75 36-117 82-150 161l-16 38 45 40c86 77 235 152 397 198 47 14 186 39 310 56 124 17 234 36 244 42 11 6 31 13 45 15 14 2 70 9 124 16 100 12 140 35 45 25-43-4-49-3-30 5 16 8 42 8 91 1 70-11 121-7 121 8 0 5-7 9-17 9-9 0-14 2-11 5 3 4 48 10 99 16 260 27 885 89 898 89 9 0 23 5 31 10 13 9 13 12-3 24-15 12-12 14 35 24 44 8 54 7 64-6 9-13 37-16 157-16 141-1 146 0 156 21 9 20 6 22-40 32-28 6-58 12-67 12-58 5 266 38 376 39 46 0 143 9 215 21 112 18 172 21 392 20 143-1 319 3 390 10 90 8 147 8 185 1 33-6 57-7 61-1 3 5 57 18 120 30 63 11 141 29 174 39 66 21 267 55 416 69 52 6 141 23 199 39 58 17 139 37 180 45 130 27 366 117 385 146 3 6 38 27 78 48 185 97 296 289 326 563 6 58 6 89-1 98-14 16-15 16 65 35 80 19 161 63 153 83-3 8-8 20-11 27-9 20 58 91 101 106 22 8 54 24 71 35 29 18 33 26 33 65 0 35 9 58 40 106 22 33 55 76 75 95 39 37 44 68 21 116-8 16-27 94-41 174-30 164-36 175-127 221-57 29-63 35-118 119-46 69-38 96 41 151 53 37-7 30-94-11-45-21-79-15-136 24-40 28-58 32-153 41l-66 5-127-85c-74-50-137-85-152-85-13 0-86-34-161-77-75-42-153-84-172-94-30-15-545-159-569-159-5 0 16 62 46 138 88 223 144 424 173 627 40 283 104 646 121 699 53 156 143 300 399 631 241 313 528 701 550 745 34 66 100 320 100 383 0 12-13 24-39 34-41 16-51 37-51 107 0 45-44 108-137 198-69 67-85 77-128 84-77 13-215 10-265-5-108-32-114-36-133-76-11-22-36-60-56-85-20-25-57-74-83-110-63-89-127-146-206-182-66-30-173-99-283-184-84-64-149-141-199-234-25-46-69-118-98-159-72-104-107-180-139-297-25-92-27-115-29-324-2-124-7-450-12-725-11-526-12-541-66-750-26-102-180-603-188-610-2-3-61-10-130-16-108-10-143-9-245 6-86 13-145 15-220 10-82-5-103-4-103 7 0 46 37 206 76 329 47 148 203 889 244 1155 25 163 27 424 5 640-18 175-38 263-94 399-36 89-48 107-106 161-66 62-85 94-85 144 0 34-75 140-117 165-15 9-44 41-63 72-19 30-44 59-54 65-10 6-38 28-61 49-57 52-105 70-201 77-148 9-158 3-340-177-100-99-190-177-241-211-64-42-86-64-97-92-19-45-135-147-214-187-34-17-63-39-69-54-6-13-37-44-69-68-32-24-66-59-76-78-11-19-30-43-43-53-13-10-34-37-46-58-13-22-34-47-47-56-20-13-23-22-19-49 3-21 0-41-9-54-14-19-13-21 5-21 12 0 21-3 21-6 0-3-38-52-85-109-47-57-85-106-85-109 0-3 62 25 138 63 75 37 223 102 327 144 105 42 244 99 310 128 133 59 178 65 222 33 61-44 64-61 73-435 10-376 18-483 57-824 23-199 26-272 26-542 1-172-2-315-5-318-8-8-247 15-317 31-36 8-105 28-154 45-49 16-144 40-211 54-66 13-152 31-191 39-38 8-158 24-265 37l-194 22-41 38c-22 20-68 53-103 74-67 39-75 50-91 133-34 167-14 380 54 607 41 132 57 168 123 270 114 177 150 295 159 520 5 128 7 144 33 190 15 28 30 62 33 76 9 34-26 170-57 223-13 23-26 54-30 69-10 43-90 116-191 176-70 42-125 88-248 210-88 86-193 197-235 246-134 160-385 414-414 420-15 4-46 21-70 39-65 50-105 67-167 73-31 2-73 11-94 19-53 20-116 18-151-5l-29-20-72 40c-74 40-94 46-110 30zm6166-4640c-14-10-31-17-38-14-18 7 14 32 42 32 18 1 18-1-4-18zm-721-631c13-8 12-10-4-10-10 0-25-8-32-17-12-17-13-16-14 4 0 18 10 30 30 32 3 0 12-4 20-9zm-1670-50c8-5 12-12 8-15-10-10-49 5-43 16 8 11 16 11 35-1zm1253-61c49-10 56-15 59-38 3-25 6-26 58-26 30 1 84 4 120 8 63 6 51-2-22-18-16-3-28-10-28-16 0-7 22-8 66-3 50 5 65 4 60-5-4-7-16-9-26-6-10 3-43-1-73-10-53-15-56-15-97 6-35 19-52 21-115 16-47-3-77-1-84 6-8 8-19 5-41-11-26-19-41-22-127-21l-98 1 168 33c93 18 171 36 174 39 11 11-39 6-217-19-96-14-188-24-205-24-16 1 7 7 53 14 123 19 222 43 267 65 50 23 41 22 108 9z" fill='var(--attention)'/>
          <path d="M5800 3701c0-24 14-41 34-41 23 0 35 7 55 33 12 16 10 17-38 17-28 0-51-4-51-9z" fill='var(--attention)'/>
          <path d="M4885 3145c30-25 64-39 123-49 38-6 41 3 10 31-37 33-64 43-115 43l-48-1 30-24z" fill='var(--attention)'/>
          <path d="M7637 2964c-3-3-3-36 0-73 6-74-10-119-62-174-33-34-211-124-329-166-266-94-975-167-1948-201-602-21-871-36-971-55-38-7-85-11-102-8-18 3-35 0-39-6-4-7-34-8-86-4-57 4-80 3-80-6 0-6-16-11-39-11-45 0-63-16-31-28 15-5-22-15-122-30-168-26-158-26-158-7 0 8-4 15-10 15-5 0-10-5-10-11 0-8-5-8-15 1-18 15-45 6-45-15 0-19-25-29-115-44-38-7-80-14-92-17-13-2-23 0-23 6 0 5 12 10 28 10 43 0 72 11 72 27 0 12-10 14-52 8-94-13-143-29-146-47-2-12 3-18 15-18 15 0 16-2 3-10-8-5-24-10-34-10-11 0-27-6-35-13-9-8-106-42-216-76-519-162-713-263-903-466-62-66-142-173-142-189 0-16 31-3 41 17 14 27 73 83 129 122 23 16 54 44 67 62 14 18 30 33 35 33 5 0 36 21 69 46 65 50 205 127 221 122 6-2-8-17-31-32-45-32-112-111-220-260l-71-98 0 53c-1 48-2 52-14 36-8-10-29-61-47-113-24-69-44-108-76-145-49-58-67-88-59-97 10-9 77 60 95 98 9 20 31 54 49 75l32 40 0-33c0-43 12-41 118 12 161 81 275 118 382 123 58 3 140 16 210 33 150 38 312 66 480 83 136 14 278 16 297 4 5-3 75-2 154 3 269 17 363 21 358 16-5-5-532-46-591-46-24 0-28-3-19-13 9-11 55-13 234-9 147 3 235 1 258-6 34-11 188-25 459-42 99-6 163-15 202-29 50-17 169-41 353-71 114-19 143-28 184-58 35-26 54-32 95-32 28-1 71-5 96-10 29-6 151-2 350 9 175 11 335 15 375 11 112-11 471 6 638 30 118 17 176 31 257 63 58 22 134 50 170 62 149 51 258 123 378 249 102 108 122 151 207 431 65 214 67 224 75 370 12 217-4 270-112 365-27 23-48 50-48 61 0 55-64 112-93 83z" fill='var(--attention)'/>
        </g>
      </svg>
      </a>`;
    $('#shikimoriLink_input').value = userDATA.shikimoriLink;
  } else {
    $('#shikimoriLink_input').value = '';
  }
  $('#profile_page').innerHTML = `
  <div class="nav_profile_header">
      <div class="nav_profile_avatar">
        <img
          class="nav_profile_avatar_img"
          src="${userDATA.avatar}"
          alt=""
        />
        <div class="nav_status"></div>
        ${canEditInfo}
      </div>
      <div class="nav_profile_name" style="${
        userDATA.usernameFont
          ? `font-family: ${userDATA.usernameFont}, sans-serif;`
          : ''
      }">${userDATA.username}</div>
      
    </div>
    <div class="nav_user_info">
    <div class="nav_user_info_text"></div>
    ${scrollingText}
    <div class="nav_user_social_media_links">
    ${telegramLink}
    ${steamLink}
    ${shikimoriLink}
    </div>
    ${friendBtn}
  </div>
    <div class="nav_user_wall_wrapper">
      <div class="nav_user_wall">
        <form
          id="addPost"
          class="nav_user_wall_postForm"
          enctype="multipart/form-data"
          role="form"
        >
          <textarea
            name="postText"
            class="nav_user_wall_postTextarea"
            id="postText"
            placeholder="Что у Вас нового..."
            oninput="autoResize(this)"
            maxlength="250"
          ></textarea>
          <div class="nav_user_wall_files_wrapper">
          <p class="nav_user_wall_files_charCount">Осталось символов: <span id="charCount">250</span></p>
            <div class="emoji_picker" id="emoji_picker">
              <!-- Здесь может быть панель с эмодзи для выбора -->
              <!-- Например, используя библиотеку как EmojiMart -->
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64" width="50px" height="50px">
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYa" x1="30.5" x2="30.5" y1="35" y2="17" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#6dc7ff" />
      <stop offset="1" stop-color="#e6abff" />
    </linearGradient>
    <path fill="#fff" d="M40,33c0,0-3,1-7,1c-7,0-10-3-10-3s-4,2-4,7c0,7,5.625,11,12,11c6,0,11-3.75,11-10 C42,35,40,33,40,33z M31,46c-3.866,0-7-1.567-7-3.5s3.134-3.5,7-3.5s7,1.567,7,3.5S34.866,46,31,46z" />
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYb" x1="48.5" x2="48.5" y1="40" y2="32" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#6dc7ff" />
      <stop offset="1" stop-color="#e6abff" />
    </linearGradient>
    <path fill="#fff" d="M48.5,26c-1.381,0-2.5,1.791-2.5,4s1.119,4,2.5,4s2.5-1.791,2.5-4S49.881,26,48.5,26z M48,29 c-0.552,0-1-0.448-1-1s0.448-1,1-1s1,0.448,1,1S48.552,29,48,29z" />
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYc" x1="17" x2="17" y1="45.018" y2="35.999" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#6dc7ff" />
      <stop offset="1" stop-color="#e6abff" />
    </linearGradient>
    <path fill="#fff" d="M19.225,21.175c-1.111-0.718-3.008,0.632-4.237,3.016s-1.325,4.898-0.214,5.617 c1.111,0.718,3.008-0.632,4.237-3.016C20.241,24.408,20.337,21.893,19.225,21.175z M18,24c-0.552,0-1-0.448-1-1s0.448-1,1-1 s1,0.448,1,1S18.552,24,18,24z" />
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYd" x1="31.994" x2="31.994" y1="59" y2="9" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#6dc7ff" />
      <stop offset="1" stop-color="#e6abff" />
    </linearGradient>
    <path fill="#fff" d="M34.88,7C18,7,5.989,23,5.989,38c0,11.72,9.967,19,26.011,19c16.523,0,26-6.925,26-19 C58,28.798,49.027,7,34.88,7z M29.5,10c0.828,0,1.5,0.672,1.5,1.5S30.328,13,29.5,13S28,12.328,28,11.5S28.672,10,29.5,10z M32,54 C17.591,54,8.989,48.019,8.989,38c0-10.171,6.279-21.22,16.101-25.806C25.504,13.794,27.32,15,29.5,15c2.485,0,4.5-1.567,4.5-3.5 c0-0.524-0.158-1.016-0.423-1.462C34.008,10.014,34.442,10,34.88,10C46.504,10,55,29.648,55,38C55,51.921,40.59,54,32,54z" />
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYe" x1="30.5" x2="30.5" y1="60.25" y2="7.9" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#1a6dff" />
      <stop offset="1" stop-color="#c822ff" />
    </linearGradient>
    <path fill="#fff" d="M31,50c-6.46,0-13-4.122-13-12c0-5.554,4.367-7.802,4.553-7.895 c0.383-0.193,0.846-0.118,1.15,0.184C23.768,30.351,26.607,33,33,33c3.794,0,6.655-0.939,6.684-0.948 c0.359-0.122,0.756-0.026,1.023,0.241C40.801,32.387,43,34.636,43,39C43,45.374,37.953,50,31,50z M22.92,32.226 C21.948,32.915,20,34.709,20,38c0,6.871,5.702,10,11,10c5.888,0,10-3.701,10-9c0-2.523-0.858-4.13-1.36-4.854 C38.501,34.452,36.034,35,33,35C27.398,35,24.185,33.155,22.92,32.226z" />
    <linearGradient id="TIZHtCnMUiS3rznMpT1gYf" x1="32" x2="32" y1="60.25" y2="7.9" gradientTransform="matrix(1 0 0 -1 0 66)" gradientUnits="userSpaceOnUse">
      <stop offset="0" stop-color="#1a6dff" />
      <stop offset="1" stop-color="#c822ff" />
    </linearGradient>
    <path fill="#fff" d="M32,58C15.339,58,5,50.337,5,38C5,22.864,17.264,6,34.88,6C49.639,6,59,28.501,59,38 C59,50.71,49.159,58,32,58z M34.88,8C18.443,8,7,23.811,7,38c0,11.103,9.573,18,25,18c15.888,0,25-6.561,25-18 C57,29.348,48.185,8,34.88,8z" />
  </svg>
              <div
                class="emoji_picker_wrapper none"
                id="emoji_picker_wrapper"
              ></div>
            </div>
            <input
              id="photo"
              type="file"
              name="photo"
              accept="image/*"
              style="display: none"
            />
            <label
              for="photo"
              class="photo-icon picker"
              title="Загрузить фото"
            >
            <span class="photo-info" id="photo-info"></span>
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="50px" height="50px">
            <path d="M 11.5 6 C 8.4802259 6 6 8.4802259 6 11.5 L 6 36.5 C 6 39.519774 8.4802259 42 11.5 42 L 36.5 42 C 39.519774 42 42 39.519774 42 36.5 L 42 11.5 C 42 8.4802259 39.519774 6 36.5 6 L 11.5 6 z M 11.5 9 L 36.5 9 C 37.898226 9 39 10.101774 39 11.5 L 39 36.5 C 39 36.632609 38.980071 36.76013 38.960938 36.886719 L 26.814453 25.134766 C 26.035864 24.38142 25.017476 24.005859 24 24.005859 C 22.982524 24.005859 21.966089 24.38142 21.1875 25.134766 L 9.0390625 36.886719 C 9.0199291 36.76013 9 36.632609 9 36.5 L 9 11.5 C 9 10.101774 10.101774 9 11.5 9 z M 30.5 13 C 29.125 13 27.903815 13.569633 27.128906 14.441406 C 26.353997 15.313179 26 16.416667 26 17.5 C 26 18.583333 26.353997 19.686821 27.128906 20.558594 C 27.903815 21.430367 29.125 22 30.5 22 C 31.875 22 33.096185 21.430367 33.871094 20.558594 C 34.646003 19.686821 35 18.583333 35 17.5 C 35 16.416667 34.646003 15.313179 33.871094 14.441406 C 33.096185 13.569633 31.875 13 30.5 13 z M 30.5 16 C 31.124999 16 31.403816 16.180367 31.628906 16.433594 C 31.853997 16.686821 32 17.083333 32 17.5 C 32 17.916667 31.853997 18.313179 31.628906 18.566406 C 31.403816 18.819633 31.124999 19 30.5 19 C 29.875001 19 29.596184 18.819633 29.371094 18.566406 C 29.146003 18.313179 29 17.916667 29 17.5 C 29 17.083333 29.146003 16.686821 29.371094 16.433594 C 29.596184 16.180367 29.875001 16 30.5 16 z M 24.001953 26.988281 C 24.261517 26.988281 24.520104 27.089361 24.728516 27.291016 L 36.800781 38.970703 C 36.701225 38.982362 36.603103 39 36.5 39 L 11.5 39 C 11.396897 39 11.298775 38.982362 11.199219 38.970703 L 23.273438 27.291016 C 23.481848 27.089361 23.742389 26.988281 24.001953 26.988281 z" fill="#FFF" />
          </svg>
            </label>
            
            <input
              id="wallId"
              type="text"
              value="${userDATA.id}"
              name="wallId"
              style="display: none"
            />
            <button type="submit" class="btn btn-outline-light me-2 glow-on-hover">
              Опубликовать
            </button>
          </div>
        </form>
        <div class="nav_user_wall_wrapper_posts" id="nav_user_wall_wrapper_posts"></div>
      </div>
      <div class="nav_users_friends">
        <div class="nav_friends" id="nav_all_friends"></div>
      </div>
    </div>`;
  if (userDATA.backgroundStyle) {
    document.getElementById('nav_content').style = userDATA.backgroundStyle;
    $('#nav_sections').style = 'border: none; background: none;';
  } else {
    document.getElementById('nav_content').style = '';
    $('#nav_sections').style = '';
  }

  // Установка значения переменной CSS
  document.documentElement.style.setProperty(
    '--navColor',
    `${userDATA.colorInputNav ? userDATA.colorInputNav : '#ffffff'}`,
  );
  document.documentElement.style.setProperty(
    '--attention',
    `${
      userDATA.colorInputAttention ? userDATA.colorInputAttention : '#ffc107'
    }`,
  );
  document.documentElement.style.setProperty(
    '--navLightBg',
    `${
      userDATA.colorInputNavLightBg ? userDATA.colorInputNavLightBg : '#222222'
    }`,
  );

  if (userDATA.isRain) {
    makeItRain(0);
  } else {
    makeItRain(100);
  }

  /**
   * лисинер на изменения личной инфы
   */
  $('#nav_user_info_edit')?.addEventListener('click', showUserInfoEditWindow);

  /**
   * Добавить в друзья
   */
  $('#nav_user_add_friend')?.addEventListener('click', addFriend); //TODO::

  /**
   * Удалить из друзей
   */
  $('#nav_user_remove_friend')?.addEventListener('click', async () => {
    const data = await removeFriend(urlParams.get('id'));
    if (data) {
      announcementMessage('Вы удалили из друзей');
      renderUserProfilePage();
    }
  });
}

/**
 * рендер друзей пользователя
 */
export async function renderUsersFriends(userId) {
  let save = `<div class="nav_friends nav_friends_line">
    Друзья онлайн <span>2</span>
    <div class="nav_friends_wrapper">
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
      <div class="user_avatar user_avatar_small">
        <img
          class="user_avatar_img"
          src="./src/img/1.jpg"
          alt=""
        />
        <div class="status"></div>
      </div>
    </div>
  </div>`;
  let numberOfFriends = 0;
  let friends = '';
  $('#nav_all_friends').innerHTML = '';
  const friendsArray = await getAllFriendsInfo(userId);
  await Promise.all(
    friendsArray.map(async (friend) => {
      friends += `
      <div class="user_avatar user_avatar_small" title="${friend.username}">
      <a href="${
        import.meta.env.VITE_SRC +
        'pages/profile_page/profile.html?id=' +
        friend.id
      }">
        <img class="user_avatar_img openProfile" src="${
          unescapeSql(friend.avatar)
        }" data-id="${friend.id}" alt=""/>
        <div class="status"></div>
        </a>
      </div>`;
      numberOfFriends += 1;
    }),
  );
  let content = `Друзья <span>${numberOfFriends}</span><div class="nav_friends_wrapper">${friends}</div>`;
  $('#nav_all_friends').innerHTML = content;
}

/**
 * общий рендер страницы пользователя
 */
export async function renderUserProfilePage() {
  const id = urlParams.get('id');
  await renderProfilePage(id);
  /**
   * загрузка фото
   */
  const fileInput = document.getElementById('photo');
  const fileInfo = document.getElementById('photo-info');

  fileInput.addEventListener('change', function () {
    const file = this.files[0];

    if (file) {
      const fileName = file.name; // Имя файла
      const fileSize = Math.round(file.size / 1024); // Размер файла в килобайтах

      fileInfo.textContent = `${fileSize} KB`;
    } else {
      fileInfo.textContent = '';
    }
  });
  await renderUsersPosts(id);
  /**
   * наполнение смайликов
   */
  function insertEmoji(emoji) {
    $('#postText').value += emoji.native;
  }
  const pickerOptions = { onEmojiSelect: insertEmoji };
  const picker = new EmojiMart.Picker(pickerOptions);
  $('#emoji_picker_wrapper').appendChild(picker);

  /**
   * выбор смайликов на главной
   */
  $('#emoji_picker').addEventListener('click', showSmiles);

  /**
   * submit поста
   */
  $('#addPost').addEventListener('submit', addPost);
  await renderUsersFriends(id);
  await renderNotifications();

  $('#my_name').innerHTML = localStorage.getItem('username');
  $(
    '#my_avatar',
  ).innerHTML = `<img class="user_avatar_img" src="${localStorage.getItem(
    'avatar',
  )}" alt="фото профиля" /><div class="status"></div>`;
}

/**
 * show/hide smiles
 */
export function showSmiles() {
  $('#emoji_picker_wrapper')?.classList.toggle('none');
}

/**
 * смена аватара профиля
 */
export function changePhoto() {
  let photoUrl = $('#photoUrl').value.toString().trim();
  if (!photoUrl) {
    alert('Вставьте ссылку на изображение в поле ввода (слева от кнопки)');
    return;
  }
  photoUrl = escapeSql(escapeHtml(photoUrl));
  askConfirmationFromUser('Вы уверены, что хотите сменить аватар?').then(
    async (confirmed) => {
      if (confirmed) {
        const data = await savePhoto(photoUrl);
        if (data) {
          $('#photoUrl').value = '';
          localStorage.setItem('avatar', unescapeSql(photoUrl));
          await renderUserProfilePage();
        }
      }
    },
  );
}

export async function changeUserInfo(value, tableName) {
  const data = await saveChangedUserInfo(escapeHtml(value), tableName);
  if (data) {
    announcementMessage('Вы успешно изменили данные');
    await renderUserProfilePage();
  }
}

export async function changeColors(
  colorInputNav,
  colorInputAttention,
  colorInputNavLightBg,
) {
  const data = saveColorsToDb(
    colorInputNav,
    colorInputAttention,
    colorInputNavLightBg,
  );
  if (data) {
    announcementMessage('Вы успешно сменили настройки цветов');
    await getAndRenderMyInfo();
  }
}

/**
 * добавление нового поста
 */
export async function addPost(event) {
  //TODO:: photo\file ВАЛИДАЦИЯ
  event.preventDefault();
  const formData = new FormData(this);
  const wallId = formData.get('wallId')?.toString().trim();
  const postText = formData.get('postText')?.toString().trim();
  const photo = formData.get('photo');
  const file = formData.get('file');
  const email = localStorage.getItem('email');
  if (!email) {
    return 'Прежде всего войдите в аккаунт';
  }
  const DATA = {
    wallId,
    postText: postText ? escapeSql(escapeHtml(postText)) : '',
    photo: photo,
    //file: file,
    postTime: getCurrentDate(),
  };
  if (postText === '' && photo.size === 0) {
    announcementMessage('Не отправляйте пустой пост');
    return;
  }
  const data = await savePost(DATA);
  if (data) {
    $('#postText').value = '';
    await renderUsersPosts(urlParams.get('id'));
  }
  return false;
}

/**
 * поиск и отрисовка постов на странице пользователя
 */
export async function renderUsersPosts(userId) {
  const userPosts = await getUserPosts(userId);
  $('#nav_user_wall_wrapper_posts').innerHTML = '';
  for (const element of userPosts) {
    let content = '';
    if (element.text) {
      // Заменяем символы '\n' на переводы строк
      let text = element.text.replace(/\\n/g, '<br>');
      const videoLinks = text.match(/https?:\/\/[^ ]+/g);
      if (videoLinks) {
        // Iterate over all the found video links and replace them with video preview elements
        for (const videoLink of videoLinks) {
          // Replace the video link with a video preview element
          text = text.replace(
            videoLink,
            `<div class="video-preview" style="display: inline-block;">
              <a href="${unescapeSql(videoLink)}" target="_blank">
                Ссылка на видео
              </a>
            </div>`,
          );
        }
      }
      content += `<div class="nav_user_wall_postTextarea">${text}</div>`;
    }
    element.photos && element.photos.data[0]
      ? (content += `<div class="nav_user_wall_post_imgWrapper"><img src="data:image/png;base64,${element.photosString}" alt="" onclick="openModal(this)" /></div>`)
      : (content += '');
    element.files && element.files.data[0]
      ? (content += `<a href="${element.files}" class="nav_user_wall_post_file" target="_blank"><img src="./src/img/File.svg" alt="" /></a>`)
      : (content += '');
    localStorage.getItem('id') === element.wallId.toString() ||
    localStorage.getItem('id') === element.id.toString()
      ? (content += `<div class="delete_post" data-postId="${element.postsid}" data-wallId="${element.wallId}" title="Удалить пост">x</div>`)
      : (content += '');
    $('#nav_user_wall_wrapper_posts').insertAdjacentHTML(
      'afterbegin',
      `<div class="nav_user_wall_post">
          <div class="nav_user_wall_post_div">
          <div class="user_avatar user_avatar_small" title="${
            element.username
          }">
            <a href="${
              import.meta.env.VITE_SRC +
              'pages/profile_page/profile.html?id=' +
              element.id
            }">
              <img
                class="user_avatar_img openProfile"
                src="${unescapeSql(element.avatar)}"
                data-id="${element.id}"
                alt=""
              />
              <div class="status"></div>
            </a>
          </div>
          <div class="post_author_name">${element.username}</div>
          </div>
          ${content}
          <div class="post_postTime">${element.postTime}</div>
        </div>`,
    );
  }

  /**
   * удаление поста
   */
  let deleteBtns = [...document.getElementsByClassName('delete_post')];
  deleteBtns.forEach((btn) => {
    btn.addEventListener('click', () => {
      deletePost(
        btn.getAttribute('data-postId'),
        btn.getAttribute('data-wallId'),
      );
    });
  });
}

/**
 * удаление поста
 */
export function deletePost(postId, wallId) {
  //TODO:: тут лучше только посты ререндерить и на сервере проверять права на удаление
  askConfirmationFromUser('Вы уверены, что хотите удалить пост?').then(
    async (confirmed) => {
      if (confirmed) {
        const data = await removePost(postId);
        if (data) {
          announcementMessage('Вы успешно удалили пост');
          await renderUsersPosts(urlParams.get('id'));
        }
      }
    },
  );
}

/**
 * Удалить из друзей
 */
export async function deleteFriend(event) {
  const targetElement = event.target;
  const currentElement = targetElement.closest('.nav_user_remove_friend');
  const friendId = currentElement?.getAttribute('data-id');

  const data = await removeFriend(friendId);
  if (data) {
    announcementMessage('Пользователь удален из друзей');
    await renderUserProfilePage();
  }
}
